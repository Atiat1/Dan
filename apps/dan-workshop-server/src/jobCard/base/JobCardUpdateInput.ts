/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { CustomerWhereUniqueInput } from "../../customer/base/CustomerWhereUniqueInput";
import {
  ValidateNested,
  IsOptional,
  IsString,
  MaxLength,
  IsInt,
  Min,
  Max,
  IsEnum,
} from "class-validator";
import { Type } from "class-transformer";
import { InvoiceUpdateManyWithoutJobCardsInput } from "./InvoiceUpdateManyWithoutJobCardsInput";
import { ServiceUpdateManyWithoutJobCardsInput } from "./ServiceUpdateManyWithoutJobCardsInput";
import { EnumJobCardStatus } from "./EnumJobCardStatus";

@InputType()
class JobCardUpdateInput {
  @ApiProperty({
    required: false,
    type: () => CustomerWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CustomerWhereUniqueInput)
  @IsOptional()
  @Field(() => CustomerWhereUniqueInput, {
    nullable: true,
  })
  customer?: CustomerWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
    type: () => InvoiceUpdateManyWithoutJobCardsInput,
  })
  @ValidateNested()
  @Type(() => InvoiceUpdateManyWithoutJobCardsInput)
  @IsOptional()
  @Field(() => InvoiceUpdateManyWithoutJobCardsInput, {
    nullable: true,
  })
  invoices?: InvoiceUpdateManyWithoutJobCardsInput;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  jobNumber?: number | null;

  @ApiProperty({
    required: false,
    type: () => ServiceUpdateManyWithoutJobCardsInput,
  })
  @ValidateNested()
  @Type(() => ServiceUpdateManyWithoutJobCardsInput)
  @IsOptional()
  @Field(() => ServiceUpdateManyWithoutJobCardsInput, {
    nullable: true,
  })
  services?: ServiceUpdateManyWithoutJobCardsInput;

  @ApiProperty({
    required: false,
    enum: EnumJobCardStatus,
  })
  @IsEnum(EnumJobCardStatus)
  @IsOptional()
  @Field(() => EnumJobCardStatus, {
    nullable: true,
  })
  status?: "Option1" | null;
}

export { JobCardUpdateInput as JobCardUpdateInput };
